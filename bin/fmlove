#!/usr/bin/env python3

import os
import os.path
import sys
import re
import getpass
from textwrap import dedent

import pylast
from configobj import ConfigObj

config_file = os.path.join(
        os.environ.get('XDG_CONFIG_HOME') or os.path.expanduser('~/.config'),
        'fmlove.conf')
methods_re = re.compile('^(?:np|(?:un)?(?:love|ban))$')
api_auth = {
    'api_key': 'fdaa08f45c7ac5fd3ee4d949465fb237',
    'api_secret': '07a9056a8855568b61727a231a80611b'}

def usage():
    sys.exit(dedent('''
    Usage:
      {0}
          If run from a terminal without arguments and the configuration file
          doesn't exist, prompt for Last.fm credentials and initialize the
          configuration file.
          The configuration file is "{1}".
      {0} np|love|unlove|ban|unban
          If a track is being played, mark it appropriately (except for np)
          and print it, or exit with status code 2.
    ''').strip().format(sys.argv[0], config_file))

def init():
    os.umask(0o077)
    os.makedirs(os.path.dirname(config_file), exist_ok = True)

    username = input('Last.fm username: ')
    passmd5 = pylast.md5(getpass.getpass(
        'Password for Last.fm user "%s": ' % username))

    lastfm = pylast.LastFMNetwork(username=username,
            password_hash=passmd5, **api_auth)
    sesskey = lastfm._get_ws_auth()[2]

    config = ConfigObj(config_file)
    config['username'] = username
    config['sessionkey'] = sesskey
    config.write()

def serve(action):
    config = ConfigObj(config_file)
    username = config['username']
    sesskey = config['sessionkey']

    lastfm = pylast.LastFMNetwork(session_key=sesskey, **api_auth)
    u = lastfm.get_user(username)
    t = u.get_now_playing()

    if t:
        if action != 'np':
            t._request('track.' + action)
        print(t)
    else:
        sys.exit(2)

if __name__ == '__main__':
    if os.path.isfile(config_file):
        if len(sys.argv) == 2 and methods_re.match(sys.argv[1]):
            serve(sys.argv[1])
        else:
            usage()
    elif len(sys.argv) == 1 and sys.stdout.isatty():
        init()
    else:
        print("ERROR: The configuration file doesn't exist.", file=sys.stderr)
        usage()
