#!/usr/bin/env python

import array
import getpass
import os
import os.path
import pylast
import re
from configobj import ConfigObj
from os.path import expanduser
from sys import argv

CONF_FILE = expanduser("~/.config/fmlove.conf")
SESSKEY_FILE = expanduser("~/.config/fmlove.sess")
METHODS_RE = re.compile("^(?:un)?(?:love|ban)$")

def usage():
	exit("Usage: %s love|unlove|ban|unban" % argv[0])

if len(argv) < 2:
	usage()
if not METHODS_RE.match(argv[1]):
	usage()

method = 'track.' + argv[1]

config = ConfigObj(CONF_FILE)
apikey = config['apikey']
secret = config['secret']
user = config['user']

def rate(lastfm):
	u = lastfm.get_user(user)
	t = u.get_now_playing()
	print(t)
	if not t is None:
		t._request(method)

done = False

if os.path.exists(SESSKEY_FILE):
	with open(SESSKEY_FILE) as f:
		sesskey = f.read()
	try:
		lastfm = pylast.LastFMNetwork(
				api_key = apikey,
				api_secret = secret,
				session_key = sesskey)
		rate(lastfm)
		done = True
	except pylast.WSError as e:
		if e.get_id == pylast.STATUS_INVALID_SK:
			os.remove(SESSKEY_FILE)
		else:
			raise e

if not done:
	if 'passmd5' in config:
		passmd5 = config['passmd5']
	else:
		passmd5 = pylast.md5(getpass.getpass(
			"Password for Last.fm user '%s': " % user))
	lastfm = pylast.LastFMNetwork(
			api_key = apikey,
			api_secret = secret,
			username = user,
			password_hash = passmd5)
	rate(lastfm)
	(_, _, sesskey) = lastfm._get_ws_auth()
	with open(SESSKEY_FILE, 'w') as f:
		f.write(sesskey)
	os.chmod(SESSKEY_FILE, 0600)

