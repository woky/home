#!/usr/bin/env perl
use warnings; use strict;

=head1 NAME
audadd - Adds files to an audio player
=head1 DESCRIPTION
Traverses the directory tree beneath arguments and adds audio files it finds to
an audio player. CUE files are treated specially.
=cut

my @ADDCMD = qw(qmmp -e);
my @EXT = qw(
ape
flac
flv
m4a
mp3
mp4
mpc
ogg
tak
tta
wav
webm
wma
wv
);

use v5.18;
#use autodie qw(:all);
use File::Glob qw(:nocase);
use File::Spec::Functions qw(splitpath catpath);
use Cwd qw(getcwd);

my %ext;
@ext{@EXT} = 1;

sub add($)
{
	system(@ADDCMD, $_[0]);
}

sub parse_cue($)
{
	my ($cue) = @_;
	open(my $fh, '<', $cue);
	my @entries = grep { defined } map { /^FILE "(.+?)"/ ? $1 : undef } <$fh>;
	close($fh);
	@entries;
}

sub recurse
{
	my (%ignored) = @_;
	for my $cue (sort <*.cue>) {
		my $valid = 0;
		for my $f (grep { -f $_ } parse_cue($cue)) {
			$valid ||= 1;
			$ignored{$f} = 1;
		}
		if ($valid) {
			add($cue);
		}
	}
	map { add($_) } sort grep {
		-f && ! exists $ignored{$_} && /\.([^.]+)$/ && exists $ext{lc $1}
	} <*>;
	for my $d (sort grep { -d $_ } <*>) {
		my %new_ignored =
			map { $_ => 1 } grep { defined }
			map { 
				my @split = splitpath($_);
				my $first = shift @split;
				if ($first eq $d) { catpath(@split) }
				else { undef }
			} keys %ignored;
		chdir($d);
		recurse(%new_ignored);
		chdir('..');
	}
}

my $cwd = getcwd;
for my $f (@ARGV) {
	if (-f $f) {
		add($f)
	} else {
		chdir($f);
		recurse();
		chdir($cwd);
	}
}
